---
import { ISbStoryData, useStoryblokApi } from "@storyblok/astro";
import StoryblokComponent from "@storyblok/astro/StoryblokComponent.astro";
import {
  FooterStoryblok,
  HeaderStoryblok,
  PageStoryblok,
} from "../generated/component-types-sb";
import BaseLayout from "../layouts/BaseLayout.astro";

export async function getStaticPaths() {
  const storyblokApi = useStoryblokApi();

  const { data } = await storyblokApi.get("cdn/links", {
    version: "draft",
  });

  let links = data.links;
  links = Object.values(links);

  const paths = links.map((link) => {
    return {
      params: { path: link.slug },
    };
  });

  paths.push({ params: { path: undefined } });

  return paths;
}

let { path } = Astro.params;

path = path == undefined ? "home" : path;

const storyblokApi = useStoryblokApi();

const apiVersion = import.meta.env.PUBLIC_STORYBLOK_API_VERSION;

const headerPromise = storyblokApi
  .get(`cdn/stories/header`, {
    version: apiVersion,
  })
  .catch((error) => {
    throw new Error(`Error getting header data for path '${path}'`, {
      cause: error,
    });
  });

const pagePromise = storyblokApi
  .get(`cdn/stories/${path}`, {
    version: apiVersion,
  })
  .catch((error) => {
    throw new Error(`Error getting page data for path '${path}'`, {
      cause: error,
    });
  });

const footerPromise = storyblokApi
  .get(`cdn/stories/footer`, {
    version: apiVersion,
  })
  .catch((error) => {
    throw new Error(`Error getting footer data for path '${path}'`, {
      cause: error,
    });
  });

const [headerData, pageData, footerData] = await Promise.all([
  headerPromise,
  pagePromise,
  footerPromise,
]);

const header: ISbStoryData<HeaderStoryblok> = headerData.data.story;
const story: ISbStoryData<PageStoryblok> = pageData.data.story;
const footer: ISbStoryData<FooterStoryblok> = footerData.data.story;
---

<BaseLayout>
  <StoryblokComponent
    blok={story.content}
    headerBlok={header.content}
    footerBlok={footer.content}
    path={path}
  />
</BaseLayout>
